import { defineNuxtPlugin } from '#app'
import { error_codes } from "~/utils/error_codes"
import type { StorageAdapter } from '~/plugins/storage'
import { ElMessage, ElMessageBox } from "element-plus"
import type { Result } from '@/types/common'

export default defineNuxtPlugin((nuxtApp) => {
    const config = useRuntimeConfig()
    const isClient = process.client

    // 如果不在客户端环境，提供一个空的实现
    const clientSideStorage = {
        getItem: (key: string): string | null => {
            const storage = nuxtApp.$storage as StorageAdapter | undefined
            if (!isClient) return null;
            if (storage) return storage.getItem(key);
            if (isClient) return localStorage.getItem(key);
            return null;
        },
        setItem: (key: string, value: string): void => {
            const storage = nuxtApp.$storage as StorageAdapter | undefined
            if (!isClient) return;
            if (storage) storage.setItem(key, value);
            else if (isClient) localStorage.setItem(key, value);
        },
        removeItem: (key: string): void => {
            const storage = nuxtApp.$storage as StorageAdapter | undefined
            if (!isClient) return;
            if (storage) storage.removeItem(key);
            else if (isClient) localStorage.removeItem(key);
        }
    };

    // 处理认证错误
    const handleAuthError = (message: string) => {
        // 清除登录信息
        clearLoginInfo();
        
        // 只在客户端环境下显示错误消息
        if (isClient) {
            ElMessageBox.alert(message, '登录提示', {
                confirmButtonText: '确定',
                type: 'warning',
                callback: () => {
                    navigateTo('/')
                }
            });
        }
    };

    // 清除登录信息的辅助函数
    const clearLoginInfo = () => {
        clientSideStorage.removeItem('session_token');
        clientSideStorage.removeItem('user_id');
        clientSideStorage.removeItem('nickname');
    };

    return {
        provide: {
            clearLoginInfo,
            handleAuthError
        }
    }
});